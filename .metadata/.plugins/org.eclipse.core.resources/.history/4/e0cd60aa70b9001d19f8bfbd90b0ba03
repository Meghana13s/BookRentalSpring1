package com.hm.books.authservice.service;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.when;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;

import com.hm.books.authservice.model.User;
import com.hm.books.authservice.repository.UserRepository;


@ExtendWith(MockitoExtension.class)
class UserServiceImplTest {
	
	@Mock
	private UserRepository repo;
	
	@InjectMocks
	UserServiceImpl bookServiceImpl;
	
	User user=new User();
	
	@BeforeEach
	void setUp() {
		user.setUserId(1);
		user.setUsername("meghana");
		user.setEmail("meg123@gmail.com");
		user.setPassword("Password@13");
		user.setConfirmPassword("Passworrd@13");
	}
	

	@Test
	void testSaveUser() {
		when(repo.save(Mockito.any())).thenReturn(user);
		User saveUser = bookServiceImpl.saveUser(user);
		assertNotNull(saveUser);
		
		
	}

//	@Test
//	void testGetAllUsers() {
//		fail("Not yet implemented");
//	}
//
//	@Test
//	void testGetUserByUsername() {
//		fail("Not yet implemented");
//	}

}
